var _templateObject = _taggedTemplateLiteralLoose(['\n  white-space: normal;\n  font-weight: bold;\n'], ['\n  white-space: normal;\n  font-weight: bold;\n']);

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import Cell from './Cell';

var HeaderCell = styled(Cell)(_templateObject);

var THead = function THead(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ['children']);

  return React.createElement(
    HeaderCell,
    props,
    children
  );
};

THead.defaultProps = {
  grow: 1
};

THead.propTypes = process.env.NODE_ENV !== "production" ? {
  grow: PropTypes.number,
  children: PropTypes.node
} : {};

export default THead;