{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\Desktop\\\\react-portal-nes-master - Copia\\\\src\\\\App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoTask from \"./Components/TodoTask\";\nimport Modal from './Modals/Modal';\nimport ModalContent from './Modals/ModalContent';\n\nconst App = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [task, setTask] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n\n  const handleChange = event => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    }\n  };\n\n  const completeTask = taskNameToDelete => {\n    setTodoList(todoList.filter(task => {\n      return task.taskName != taskNameToDelete;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Titolo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task...\",\n    name: \"task\",\n    value: task,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, todoList.map((task, key) => {\n    return /*#__PURE__*/React.createElement(TodoTask, {\n      key: key,\n      task: task,\n      completeTask: completeTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    modalOpen: modalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    setModalOpen: setModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"labelMedium\",\n    onClick: () => setModalOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \" aggiungi nuova\")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/marco/Desktop/react-portal-nes-master - Copia/src/App.tsx"],"names":["React","useState","TodoTask","Modal","ModalContent","App","modalOpen","setModalOpen","task","setTask","todoList","setTodoList","handleChange","event","target","name","value","completeTask","taskNameToDelete","filter","taskName","map","key"],"mappings":";AAAA,OAAOA,KAAP,IAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,GAAO,GAAG,MAAM;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAS,EAAT,CAAhC;AAEA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAU,EAAV,CAAxC;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAgD;AACnE,QAAIA,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,MAA1B,EAAkC;AAChCN,MAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAP;AACD;AACF,GAJD;;AAQA,QAAMC,YAAY,GAAIC,gBAAD,IAAoC;AACvDP,IAAAA,WAAW,CACTD,QAAQ,CAACS,MAAT,CAAiBX,IAAD,IAAU;AACxB,aAAOA,IAAI,CAACY,QAAL,IAAiBF,gBAAxB;AACD,KAFD,CADS,CAAX;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEV,IAJT;AAKE,IAAA,QAAQ,EAAEI,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,QAAQ,CAACW,GAAT,CAAa,CAACb,IAAD,EAAcc,GAAd,KAA8B;AAC1C,wBAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAoB,MAAA,IAAI,EAAEd,IAA1B;AAAgC,MAAA,YAAY,EAAES,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADD,CARF,CAFF,CADF,eAmBE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEX,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,eAIA;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,IAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJA,CAnBF,CADF;AAoCD,CA1DD;;AA4DA,eAAeF,GAAf","sourcesContent":["import React, { FC, ChangeEvent, useState } from \"react\";\nimport \"./App.css\";\nimport TodoTask from \"./Components/TodoTask\";\nimport { ITask } from \"./Interfaces\";\nimport Modal from './Modals/Modal';\nimport ModalContent from './Modals/ModalContent';\n\nconst App: FC = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [task, setTask] = useState<string>(\"\");\n  \n  const [todoList, setTodoList] = useState<ITask[]>([]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    } \n  };\n\n  \n\n  const completeTask = (taskNameToDelete: string): void => {\n    setTodoList(\n      todoList.filter((task) => {\n        return task.taskName != taskNameToDelete;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h1>Titolo</h1>\n        <div className=\"inputContainer\">\n          <input\n            type=\"text\"\n            placeholder=\"Task...\"\n            name=\"task\"\n            value={task}\n            onChange={handleChange}\n          />\n          <div className=\"todoList\">\n          {todoList.map((task: ITask, key: number) => {\n            return <TodoTask key={key} task={task} completeTask={completeTask} />;\n          })}\n        </div>\n        </div>\n        \n      </div>\n      <div className=\"footer shadow\">\n      <Modal modalOpen={modalOpen}>\n        <ModalContent setModalOpen={setModalOpen } />\n      </Modal>\n      <button\n        type='button'\n        className='labelMedium'\n        onClick={() => setModalOpen(true)}\n      > aggiungi nuova</button>\n      \n      \n        \n      </div>\n      \n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}