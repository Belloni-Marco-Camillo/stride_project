{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\Desktop\\\\react-portal-nes-master - Copia\\\\src\\\\App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoTask from \"./Components/TodoTask\";\nimport Modal from './Modals/Modal';\nimport ModalContent from './Modals/ModalContent';\n\nconst App = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [todoList, setTodoList] = useState([]);\n\n  const addTask = name => {\n    if (name === \"\") return;\n    const duplicate = todoList.find(task => task.name === name);\n    if (duplicate) return;\n    const task = {\n      name,\n      checked: false\n    };\n    setTodoList([...todoList, task]);\n  };\n\n  const deleteTask = taskName => {\n    setTodoList(todoList.filter(task => {\n      return task.name !== taskName;\n    }));\n  };\n\n  const checkTask = taskName => {\n    let updatedList = todoList.map(task => {\n      return task.name !== taskName ? task : { ...task,\n        checked: !task.checked\n      };\n    });\n    const sortedList = updatedList.sort((a, b) => Number(a.checked) - Number(b.checked));\n    setTodoList(sortedList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Titolo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoList d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, todoList.map((task, key) => {\n    return /*#__PURE__*/React.createElement(TodoTask, {\n      key: key,\n      task: task,\n      deleteTask: deleteTask,\n      checkTask: checkTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    modalOpen: modalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    setModalOpen: setModalOpen,\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"labelMedium\",\n    onClick: () => setModalOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Nuova voce\")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/marco/Desktop/react-portal-nes-master - Copia/src/App.tsx"],"names":["React","useState","TodoTask","Modal","ModalContent","App","modalOpen","setModalOpen","todoList","setTodoList","addTask","name","duplicate","find","task","checked","deleteTask","taskName","filter","checkTask","updatedList","map","sortedList","sort","a","b","Number","key"],"mappings":"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","sourcesContent":["import React, { FC, useState } from \"react\";\nimport \"./App.css\";\nimport TodoTask from \"./Components/TodoTask\";\nimport { ITask } from \"./Interfaces\";\nimport Modal from './Modals/Modal';\nimport ModalContent from './Modals/ModalContent';\n\nconst App: FC = () => {\n  const [modalOpen, setModalOpen] = useState(false);  \n  const [todoList, setTodoList] = useState<ITask[]>([]);\n\n  const addTask = (name: string): void => {\n    if (name === \"\") return;\n    const duplicate = todoList.find((task) => task.name === name);\n    if (duplicate) return;\n    const task = { name, checked: false };\n    setTodoList([...todoList, task]);\n  };\n\n  const deleteTask = (taskName: string): void => {\n    setTodoList(\n      todoList.filter((task) => {\n        return task.name !== taskName;\n      })\n    );\n  };\n\n  const checkTask = (taskName: string): void => {\n    let updatedList = todoList.map((task) => {\n      return task.name !== taskName ? task : {...task, checked: !task.checked};\n    });\n    const sortedList = updatedList.sort((a, b) => Number(a.checked) - Number(b.checked));\n    setTodoList(sortedList);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h1>Titolo</h1>\n        <div className=\"inputContainer\">\n          <div className=\"todoList d-flex\">\n            {todoList.map((task: ITask, key: number) => {\n              return <TodoTask key={key} task={task} deleteTask={deleteTask} checkTask={checkTask} />;\n            })}\n          </div>\n        </div>\n        \n      </div>\n      <div className=\"footer shadow\">\n      <Modal modalOpen={modalOpen}>\n        <ModalContent setModalOpen={setModalOpen} addTask={addTask} />\n      </Modal>\n      \n      <button\n        type='button'\n        className='labelMedium'\n        onClick={() => setModalOpen(true)}>Nuova voce</button>        \n      </div>\n      \n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}