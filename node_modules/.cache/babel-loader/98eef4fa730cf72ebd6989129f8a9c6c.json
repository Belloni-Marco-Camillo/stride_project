{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\Desktop\\\\react-portal-nes-master - Copia\\\\src\\\\App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoTask from \"./Components/TodoTask\";\nimport Modal from './Modals/Modal';\nimport ModalContent from './Modals/ModalContent';\n/* import { ReactComponent as Logo } from './Icons/Bin.svg'; */\n\nconst App = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [task, setTask] = useState(\"\");\n  const [taskDone, setTaskDone] = useState([]);\n  const [todoList, setTodoList] = useState([]);\n\n  const handleChange = event => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    }\n  };\n\n  const addTask = () => {\n    const newTask = {\n      taskName: task\n    };\n    setTodoList([...todoList, newTask]);\n    setTask(\"\");\n  };\n\n  const completeTask = taskNameToDelete => {\n    setTodoList(todoList.filter(task => {\n      return task.taskName != taskNameToDelete;\n    }));\n  };\n\n  const addTaskDone = () => {\n    const newTaskDone = this.task;\n    setTaskDone([...taskDone, newTaskDone]);\n    setTask(\"\");\n  };\n  /*   const doneTask = (taskNameToDone: string, taskName:string): void => {\n      setTodoList(\n        //todoList.filter((task) => {\n          taskDone.push(taskName);\n          /* return task.taskName != taskNameToDelete; */\n  // })\n  // );\n  // };\n  // */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Titolo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Task...\",\n    name: \"task\",\n    value: task,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, todoList.map((task, key) => {\n    return /*#__PURE__*/React.createElement(TodoTask, {\n      key: key,\n      task: task,\n      completeTask: completeTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoListDone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, todoList.map((task, key) => {\n    return /*#__PURE__*/React.createElement(TodoTask, {\n      key: key,\n      task: task,\n      completeTask: completeTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    modalOpen: modalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    setModalOpen: setModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"labelMedium\",\n    onClick: () => setModalOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \" aggiungi nuova\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"labelMedium\",\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Add Task\")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/marco/Desktop/react-portal-nes-master - Copia/src/App.tsx"],"names":["React","useState","TodoTask","Modal","ModalContent","App","modalOpen","setModalOpen","task","setTask","taskDone","setTaskDone","todoList","setTodoList","handleChange","event","target","name","value","addTask","newTask","taskName","completeTask","taskNameToDelete","filter","addTaskDone","newTaskDone","map","key"],"mappings":"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","sourcesContent":["import React, { FC, ChangeEvent, useState } from \"react\";\nimport \"./App.css\";\nimport TodoTask from \"./Components/TodoTask\";\nimport { ITask } from \"./Interfaces\";\nimport Modal from './Modals/Modal';\nimport ModalContent from './Modals/ModalContent';\n/* import { ReactComponent as Logo } from './Icons/Bin.svg'; */\n\n\nconst App: FC = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [task, setTask] = useState<string>(\"\");\n  const [taskDone, setTaskDone] = useState<ITask[]>([]);\n  \n  const [todoList, setTodoList] = useState<ITask[]>([]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    } \n  };\n\n  const addTask = (): void => {\n    const newTask = { taskName: task };\n    setTodoList([...todoList, newTask]);\n    setTask(\"\");\n  };\n\n  const completeTask = (taskNameToDelete: string): void => {\n    setTodoList(\n      todoList.filter((task) => {\n        return task.taskName != taskNameToDelete;\n      })\n    );\n  };\n  const addTaskDone = (): void => {\n    const newTaskDone = this.task;\n    setTaskDone([...taskDone, newTaskDone]);\n    setTask(\"\");\n  };\n\n\n/*   const doneTask = (taskNameToDone: string, taskName:string): void => {\n    setTodoList(\n      //todoList.filter((task) => {\n        taskDone.push(taskName);\n        /* return task.taskName != taskNameToDelete; */\n     // })\n   // );\n // };\n  // */\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h1>Titolo</h1>\n        <div className=\"inputContainer\">\n          <input\n            type=\"text\"\n            placeholder=\"Task...\"\n            name=\"task\"\n            value={task}\n            onChange={handleChange}\n          />\n          <div className=\"todoList\">\n            \n            {todoList.map((task: ITask, key: number) => {\n              return   <TodoTask key={key} task={task} completeTask={completeTask} />\n            })}\n          </div>\n        </div>\n        {/* proviamo a creare un secondo array */}\n        <div className=\"todoListDone\">\n          {todoList.map((task: ITask, key: number) => {\n            return <TodoTask key={key} task={task} completeTask={completeTask} />;\n          })}\n        </div>\n        {/* fine prova */}\n        \n      </div>\n      <div className=\"footer shadow\">\n      <Modal modalOpen={modalOpen}>\n        <ModalContent setModalOpen={setModalOpen } />\n      </Modal>\n      \n      <button\n        type='button'\n        className='labelMedium'\n        onClick={() => setModalOpen(true)}\n      > aggiungi nuova</button>\n      <button className=\"labelMedium\" onClick={addTask}>Add Task</button>\n      \n        \n      </div>\n      \n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}